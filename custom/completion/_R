#compdef R

typeset -A opt_args
local context state line

_R() {
  if (( CURRENT > 2 )); then
    (( CURRENT-- ))
    shift words
    _call_function 1 _R_${words[1]}
  else
    _values "R " \
      "RHOME[Print path to R home directory and exit]" \
      "CMD[Run an R command script]"
  fi
}

_R_CMD() {
  if (( CURRENT > 2 )); then
    (( CURRENT-- ))
    shift words
    _call_function 1 _R_CMD_${words[1]}
  else
    _values "R CMD command" \
        "build[Build a package]" \
        "check[Check a package]" \
        "BATCH[Run R in batch mode]" \
        "COMPILE[Compile files for use with R]" \
        "SHLIB[Build shared library for dynamic loading]" \
        "INSTALL[Install add-on packages]" \
        "REMOVE[Remove add-on packages]" \
        "build[Build add-on packages]" \
        "check[Check add-on packages]" \
        "LINK[Front-end for creating executable programs]" \
        "Rprof[Post-process R profiling files]" \
        "Rdconv[Convert Rd format to various other formats]" \
        "Rd2dvi[Convert Rd format to DVI]" \
        "Rd2pdf[Convert Rd format to PDF]" \
        "Rd2txt[Convert Rd format to pretty text]" \
        "Sd2Rd[Convert S documentation to Rd format]" \
        "Stangle[Extract S/R code from Sweave documentation]" \
        "Sweave[Process Sweave documentation]" \
        "Rdiff[Diff R output ignoring headers etc]" \
        "config[Obtain configuration information about R]" \
        "javareconf[Update the Java configuration variables]" \
        "rtags[Create Emacs-style tag files from C, R, and Rd files]"
  fi
}

_R_CMD_INSTALL() {
install_args=("(-h --help)"{-h,--help}"[print short help message and exit]"
    "(-v --version)"{-v,--version}"[print INSTALL version info and exit]"
    "(-c --clean)"{-c,--clean}"remove files created during installation]"
    "--preclean[remove files created during a previous run]"
    "(-d --debug)"{-d,--debug}"[turn on script and build-help debugging]"
    "(-l --library)"{-l,--library}"[install packages to library tree LIB]":file:_files -/
# "    --no[configure    do not use the package's configure script]" \
# "    --no[docs         do not install HTML, LaTeX or examples help]" \
# "    --html[build HTML help]" \
# "    --no[html         do not build HTML help]" \
# "    --latex[install LaTeX help]" \
# "    --example[install R code for help examples]" \
# "    --use[zip-data    collect data files in zip archive]" \
# "    --install[tests   install package-specific tests (if any)]" \
# "    --fake[do minimal install for testing purposes]" \
)
  _arguments $install_args
# "    --no[lock, --unsafe]" \
# "                      install[on top of any existing installation]" \
# "                      without[using a lock directory]" \
# "    --pkglock[use a per-package lock directory]" \
# "    --build[build binaries of the installed package(s)]" \
# "    --data[compress=  none, gzip or bzip2 (default) compression]" \
# "                      to[be used for lazy-loading of data]" \
# "    --resave[data     re-save data files as compactly as possible]" \
# "    --configure[args=ARGS]" \
# "                      set[arguments for the configure scripts (if any)]" \
# "    --configure[vars=VARS]" \
# "                      set[variables for the configure scripts (if any)]" \
# "    --libs[only       only install the libs directory]" \
# "    --no[multiarch    build only the main architecture]" \
    _files -g '*.gz'
}

_R_CMD_check() {
    # fixme: should be dir or package .tar.gz
    _files
}

_R_CMD_build() {
    _files -/
}

_R_CMD_Stangle() {
    _files -g '*.Rnw'
}

_R_CMD_Sweave() {
    _files -g '*.Rnw'
}
